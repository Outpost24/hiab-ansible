# {{ ansible_managed }}
{% if includedocs is defined %}
# -----------------------------
# PostgreSQL configuration file
# -----------------------------
#
# This file consists of lines of the form:
#
#   name = value
#
# (The "=" is optional.)  Whitespace may be used.  Comments are introduced with
# "#" anywhere on a line.  The complete list of parameter names and allowed
# values can be found in the PostgreSQL documentation.
#
# The commented-out settings shown in this file represent the default values.
# Re-commenting a setting is NOT sufficient to revert it to the default value;
# you need to reload the server.
#
# This file is read on server startup and when the server receives a SIGHUP
# signal.  If you edit the file on a running system, you have to SIGHUP the
# server for the changes to take effect, run "pg_ctl reload", or execute
# "SELECT pg_reload_conf()".  Some parameters, which are marked below,
# require a server shutdown and restart to take effect.
#
# Any parameter can also be given as a command-line option to the server, e.g.,
# "postgres -c log_connections=on".  Some parameters can be changed at run time
# with the "SET" SQL command.
#
# Memory units:  kB = kilobytes        Time units:  ms  = milliseconds
#                MB = megabytes                     s   = seconds
#                GB = gigabytes                     min = minutes
#                TB = terabytes                     h   = hours
#                                                   d   = days


#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------

# The default values of these variables are driven from the -D command-line
# option or PGDATA environment variable, represented here as ConfigDir.

#data_directory = 'ConfigDir'		# use data in another directory
					# (change requires restart)
#hba_file = 'ConfigDir/pg_hba.conf'	# host-based authentication file
					# (change requires restart)
#ident_file = 'ConfigDir/pg_ident.conf'	# ident configuration file
					# (change requires restart)

# If external_pid_file is not explicitly set, no extra PID file is written.
#external_pid_file = ''			# write an extra PID file
					# (change requires restart)


#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# - Connection Settings -

{% endif %}
listen_addresses = '{{ psql_listen_addresses }}'		# what IP address(es) to listen on;
{% if includedocs is defined %}
					# comma-separated list of addresses;
					# defaults to 'localhost'; use '*' for all
					# (change requires restart)
#port = 5432				# (change requires restart)
{% endif %}
max_connections = {{ psql_max_connections }}			# (change requires restart)
{% if includedocs is defined %}
#superuser_reserved_connections = 3	# (change requires restart)
#unix_socket_directories = '/var/run/postgresql, /tmp'	# comma-separated list of directories
					# (change requires restart)
#unix_socket_group = ''			# (change requires restart)
#unix_socket_permissions = 0777		# begin with 0 to use octal notation
					# (change requires restart)
#bonjour = off				# advertise server via Bonjour
					# (change requires restart)
#bonjour_name = ''			# defaults to the computer name
					# (change requires restart)

# - Security and Authentication -

#authentication_timeout = 1min		# 1s-600s
{% endif %}
ssl_ciphers = '{{ psql_ssl_ciphers }}' # allowed SSL ciphers
ssl_prefer_server_ciphers = {{ psql_ssl_prefer_server_ciphers }}
ssl_ecdh_curve = '{{ psql_ssl_ecdh_curve }}'
ssl_dh_params_file = '{{ psql_ssl_dh_params_file }}'

{% if psql_ssl is defined and psql_ssl and psql_ssl != 'disable' %}
ssl = on
ssl_ca_file = '{{ psql_ssl_ca_file }}'
ssl_cert_file = '{{ psql_ssl_cert_file }}'
ssl_key_file = '{{ psql_ssl_key_file }}'
{% endif %}

{% if includedocs is defined %}
#ssl_crl_file = ''
{% endif %}
password_encryption = {{ psql_password_encryption }}		# md5 or scram-sha-256
{% if includedocs is defined %}
#db_user_namespace = off
#row_security = on

# GSSAPI using Kerberos
{% endif %}
krb_server_keyfile = '{{ psql_krb_server_keyfile }}'
{% if includedocs is defined %}
#krb_caseins_users = off

# - TCP Keepalives -
# see "man 7 tcp" for details

#tcp_keepalives_idle = 0		# TCP_KEEPIDLE, in seconds;
					# 0 selects the system default
#tcp_keepalives_interval = 0		# TCP_KEEPINTVL, in seconds;
					# 0 selects the system default
#tcp_keepalives_count = 0		# TCP_KEEPCNT;
					# 0 selects the system default


#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------

# - Memory -

{% endif %}
shared_buffers = {{ psql_shared_buffers }}			# min 128kB
{% if includedocs is defined %}
					# (change requires restart)
{% endif %}
huge_pages = {{ psql_huge_pages }}			# on, off, or try
{% if includedocs is defined %}
					# (change requires restart)
#temp_buffers = 8MB			# min 800kB
{% endif %}
max_prepared_transactions = {{ psql_max_prepared_transactions }}		# zero disables the feature
{% if includedocs is defined %}
					# (change requires restart)
# Caution: it is not advisable to set max_prepared_transactions nonzero unless
# you actively intend to use prepared transactions.
{% endif %}
work_mem = {{ psql_work_mem }}				# min 64kB
{% if psql_maintenance_work_mem is defined %}
maintenance_work_mem = {{ psql_maintenance_work_mem }}		# min 1MB
{% elif ansible_memtotal_mb > 32768 %}
maintenance_work_mem = 2048MB		# min 1MB
{% endif %}
{% if includedocs is defined %}
#replacement_sort_tuples = 150000	# limits use of replacement selection sort
#autovacuum_work_mem = -1		# min 1MB, or -1 to use maintenance_work_mem
{% endif %}
max_stack_depth = {{ psql_max_stack_depth }}			# min 100kB
dynamic_shared_memory_type = {{ psql_dynamic_shared_memory_type }}	# the default is the first option
{% if includedocs is defined %}
					# supported by the operating system:
					#   posix
					#   sysv
					#   windows
					#   mmap
					# use none to disable dynamic shared memory
					# (change requires restart)

# - Disk -

#temp_file_limit = -1			# limits per-process temp file space
					# in kB, or -1 for no limit

# - Kernel Resource Usage -

#max_files_per_process = 1000		# min 25
					# (change requires restart)
{% endif %}
shared_preload_libraries = '{{ psql_shared_preload_libraries }}'		# (change requires restart)

{% if "pg_stat_statements" in psql_shared_preload_libraries %}
pg_stat_statements.max = {{ psql_pg_stat_statements_max }}
pg_stat_statements.track = {{ psql_pg_stat_statements_track }}

{% endif %}
{% if "auto_explain" in psql_shared_preload_libraries %}
auto_explain.log_min_duration = '{{ psql_auto_explain_log_min_duration }}'

{% endif %}
{% if includedocs is defined %}
# - Cost-Based Vacuum Delay -

#vacuum_cost_delay = 0			# 0-100 milliseconds
#vacuum_cost_page_hit = 1		# 0-10000 credits
#vacuum_cost_page_miss = 10		# 0-10000 credits
#vacuum_cost_page_dirty = 20		# 0-10000 credits
#vacuum_cost_limit = 200		# 1-10000 credits

# - Background Writer -

{% endif %}
bgwriter_delay = {{ psql_bgwriter_delay }}			# 10-10000ms between rounds
bgwriter_lru_maxpages = {{ psql_bgwriter_lru_maxpages }}		# 0-1000 max buffers written/round
bgwriter_lru_multiplier = {{ psql_bgwriter_lru_multiplier }}		# 0-10.0 multiplier on buffers scanned/round
bgwriter_flush_after = {{ psql_bgwriter_flush_after }}		# measured in pages, 0 disables
{% if includedocs is defined %}

# - Asynchronous Behavior -

{% endif %}
effective_io_concurrency = {{ psql_effective_io_concurrency }}		# 1-1000; 0 disables prefetching
max_worker_processes = {{ psql_max_worker_processes }}		# (change requires restart)
max_parallel_workers_per_gather = {{ psql_max_parallel_workers_per_gather }}	# taken from max_parallel_workers
max_parallel_workers = {{ psql_max_parallel_workers }}		# maximum number of max_worker_processes that
{% if includedocs is defined %}
					# can be used in parallel queries
#old_snapshot_threshold = -1		# 1min-60d; -1 disables; 0 is immediate
					# (change requires restart)
#backend_flush_after = 0		# measured in pages, 0 disables


#------------------------------------------------------------------------------
# WRITE AHEAD LOG
#------------------------------------------------------------------------------

# - Settings -

{% endif %}
{% if dbrole is defined and dbrole == "master" %}
wal_level = replica			# minimal, replica, or logical
{% endif %}
{% if includedocs is defined %}
					# (change requires restart)
#fsync = on				# flush data to disk for crash safety
					# (turning this off can cause
					# unrecoverable data corruption)
#synchronous_commit = on		# synchronization level;
					# off, local, remote_write, remote_apply, or on
#wal_sync_method = fsync		# the default is the first option
					# supported by the operating system:
					#   open_datasync
					#   fdatasync (default on Linux)
					#   fsync
					#   fsync_writethrough
					#   open_sync
#full_page_writes = on			# recover from partial page writes
{% endif %}
wal_compression = {{ psql_wal_compression }}			# enable compression of full-page writes
wal_log_hints = {{ psql_wal_log_hints }}			# also do full page writes of non-critical updates
{% if includedocs is defined %}
					# (change requires restart)
{% endif %}
wal_buffers = {{ psql_wal_buffers }}			# min 32kB, -1 sets based on shared_buffers
{% if includedocs is defined %}
					# (change requires restart)
#wal_writer_delay = 200ms		# 1-10000 milliseconds
#wal_writer_flush_after = 1MB		# measured in pages, 0 disables

#commit_delay = 0			# range 0-100000, in microseconds
#commit_siblings = 5			# range 1-1000

# - Checkpoints -

#checkpoint_timeout = 5min		# range 30s-1d
{% endif %}
max_wal_size = {{ psql_max_wal_size }}
min_wal_size = {{ psql_min_wal_size }}
checkpoint_completion_target = {{ psql_checkpoint_completion_target }}	# checkpoint target duration, 0.0 - 1.0
{% if includedocs is defined %}
#checkpoint_flush_after = 256kB		# measured in pages, 0 disables
#checkpoint_warning = 30s		# 0 disables

# - Archiving -

#archive_mode = off		# enables archiving; off, on, or always
				# (change requires restart)
{% endif %}
archive_command = '{{ psql_archive_command }}'		# command to use to archive a logfile segment
{% if includedocs is defined %}
				# placeholders: %p = path of file to archive
				#               %f = file name only
				# e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
#archive_timeout = 0		# force a logfile segment switch after this
				# number of seconds; 0 disables


#------------------------------------------------------------------------------
# REPLICATION
#------------------------------------------------------------------------------

# - Sending Server(s) -

# Set these on the master and on any standby that will send replication data.

{% endif %}
{% if dbrole is defined and dbrole == "master" %}
max_wal_senders = {{ psql_max_wal_senders }}		# max number of walsender processes
{%   if includedocs is defined %}
				# (change requires restart)
{%   endif %}
wal_keep_segments = {{ psql_wal_keep_segments }}		# in logfile segments, 16MB each; 0 disables
wal_sender_timeout = {{ psql_wal_sender_timeout }}	# in milliseconds; 0 disables
{% endif %}

max_replication_slots = {{ psql_max_replication_slots }}	# max number of replication slots
{% if includedocs is defined %}
				# (change requires restart)
{% endif %}
track_commit_timestamp = {{ psql_track_commit_timestamp }}	# collect timestamp of transaction commit
{% if includedocs is defined %}
				# (change requires restart)

# - Master Server -

# These settings are ignored on a standby server.

{% endif %}
{% if dbrole is defined and dbrole == "master" %}
hot_standby = on
hot_standby_feedback = on
{% endif %}
{% if dbrole is defined and dbrole == "replica" %}
hot_standby = on
{% endif %}
{% if includedocs is defined %}
#synchronous_standby_names = ''	# standby servers that provide sync rep
				# method to choose sync standbys, number of sync standbys,
				# and comma-separated list of application_name
				# from standby(s); '*' = all
#vacuum_defer_cleanup_age = 0	# number of xacts by which cleanup is delayed

# - Standby Servers -

# These settings are ignored on a master server.

#hot_standby = on			# "off" disallows queries during recovery
					# (change requires restart)
#max_standby_archive_delay = 30s	# max delay before canceling queries
					# when reading WAL from archive;
					# -1 allows indefinite delay
#max_standby_streaming_delay = 30s	# max delay before canceling queries
					# when reading streaming WAL;
					# -1 allows indefinite delay
#wal_receiver_status_interval = 10s	# send replies at least this often
					# 0 disables
#hot_standby_feedback = off		# send info from standby to prevent
					# query conflicts
#wal_receiver_timeout = 60s		# time that receiver waits for
					# communication from master
					# in milliseconds; 0 disables
#wal_retrieve_retry_interval = 5s	# time to wait before retrying to
					# retrieve WAL after a failed attempt

# - Subscribers -

# These settings are ignored on a publisher.

#max_logical_replication_workers = 4	# taken from max_worker_processes
					# (change requires restart)
#max_sync_workers_per_subscription = 2	# taken from max_logical_replication_workers


#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------

# - Planner Method Configuration -

#enable_bitmapscan = on
#enable_hashagg = on
#enable_hashjoin = on
#enable_indexscan = on
#enable_indexonlyscan = on
#enable_material = on
#enable_mergejoin = on
#enable_nestloop = on
#enable_seqscan = on
#enable_sort = on
#enable_tidscan = on

# - Planner Cost Constants -

#seq_page_cost = 1.0			# measured on an arbitrary scale
{% endif %}
random_page_cost = {{ psql_random_page_cost }}			# same scale as above
{% if includedocs is defined %}
#cpu_tuple_cost = 0.01			# same scale as above
#cpu_index_tuple_cost = 0.005		# same scale as above
#cpu_operator_cost = 0.0025		# same scale as above
{% endif %}
parallel_tuple_cost = {{ psql_parallel_tuple_cost }}		# same scale as above
parallel_setup_cost = {{ psql_parallel_setup_cost }}	# same scale as above
{% if includedocs is defined %}
#min_parallel_table_scan_size = 8MB
#min_parallel_index_scan_size = 512kB
{% endif %}
effective_cache_size = {{ psql_effective_cache_size }}
{% if includedocs is defined %}

# - Genetic Query Optimizer -

#geqo = on
#geqo_threshold = 12
#geqo_effort = 5			# range 1-10
#geqo_pool_size = 0			# selects default based on effort
#geqo_generations = 0			# selects default based on effort
#geqo_selection_bias = 2.0		# range 1.5-2.0
#geqo_seed = 0.0			# range 0.0-1.0

# - Other Planner Options -

{% endif %}
default_statistics_target = {{ psql_default_statistics_target }}	# range 1-10000
{% if includedocs is defined %}
#constraint_exclusion = partition	# on, off, or partition
#cursor_tuple_fraction = 0.1		# range 0.0-1.0
#from_collapse_limit = 8
#join_collapse_limit = 8		# 1 disables collapsing of explicit
					# JOIN clauses
#force_parallel_mode = off


#------------------------------------------------------------------------------
# ERROR REPORTING AND LOGGING
#------------------------------------------------------------------------------

# - Where to Log -

{% endif %}
log_destination = '{{ psql_log_destination }}'		# Valid values are combinations of
{% if includedocs is defined %}
					# stderr, csvlog, syslog, and eventlog,
					# depending on platform.  csvlog
					# requires logging_collector to be on.

# This is used when logging to stderr:
{% endif %}
logging_collector = {{ psql_logging_collector }}			# Enable capturing of stderr and csvlog
{% if includedocs is defined %}
					# into log files. Required to be on for
					# csvlogs.
					# (change requires restart)

# These are only used if logging_collector is on:
{% endif %}
log_directory = '{{ psql_log_directory }}'		# directory where log files are written,
					# can be absolute or relative to PGDATA
log_filename = '{{ psql_log_filename }}'	# log file name pattern,
{% if includedocs is defined %}
					# can include strftime() escapes
#log_file_mode = 0600			# creation mode for log files,
					# begin with 0 to use octal notation
{% endif %}
log_truncate_on_rotation = {{ psql_log_truncate_on_rotation }}		# If on, an existing log file with the
{% if includedocs is defined %}
					# same name as the new log file will be
					# truncated rather than appended to.
					# But such truncation only occurs on
					# time-driven rotation, not on restarts
					# or size-driven rotation.  Default is
					# off, meaning append to existing files
					# in all cases.
{% endif %}
log_rotation_age = {{ psql_log_rotation_age }}			# Automatic rotation of logfiles will
{% if includedocs is defined %}
					# happen after that time.  0 disables.
{% endif %}
log_rotation_size = {{ psql_log_rotation_size }}			# Automatic rotation of logfiles will
{% if includedocs is defined %}
					# happen after that much log output.
					# 0 disables.

# These are relevant when logging to syslog:
{% endif %}
syslog_facility = '{{ psql_syslog_facility }}'
syslog_ident = '{{ psql_syslog_ident }}'
syslog_sequence_numbers = {{ psql_syslog_sequence_numbers }}
syslog_split_messages = {{ psql_syslog_split_messages }}
{% if includedocs is defined %}

# This is only relevant when logging to eventlog (win32):
# (change requires restart)
#event_source = 'PostgreSQL'

# - When to Log -

#client_min_messages = notice		# values in order of decreasing detail:
					#   debug5
					#   debug4
					#   debug3
					#   debug2
					#   debug1
					#   log
					#   notice
					#   warning
					#   error

#log_min_messages = warning		# values in order of decreasing detail:
					#   debug5
					#   debug4
					#   debug3
					#   debug2
					#   debug1
					#   info
					#   notice
					#   warning
					#   error
					#   log
					#   fatal
					#   panic

#log_min_error_statement = error	# values in order of decreasing detail:
					#   debug5
					#   debug4
					#   debug3
					#   debug2
					#   debug1
					#   info
					#   notice
					#   warning
					#   error
					#   log
					#   fatal
					#   panic (effectively off)

{% endif %}
log_min_duration_statement = {{ psql_log_min_duration_statement }}	# -1 is disabled, 0 logs all statements
{% if includedocs is defined %}
					# and their durations, > 0 logs only
					# statements running at least this number
					# of milliseconds


# - What to Log -

#debug_print_parse = off
#debug_print_rewritten = off
#debug_print_plan = off
#debug_pretty_print = on
{% endif %}
log_checkpoints = {{ psql_log_checkpoints }}
log_connections = {{ psql_log_connections }}
log_disconnections = {{ psql_log_disconnections }}
{% if includedocs is defined %}
#log_duration = off
{% endif %}
log_error_verbosity = {{ psql_log_error_verbosity }}		# terse, default, or verbose messages
{% if includedocs is defined %}
#log_hostname = off
{% endif %}
log_line_prefix = '{{ psql_log_line_prefix }}'			# special values:
{% if includedocs is defined %}
					#   %a = application name
					#   %u = user name
					#   %d = database name
					#   %r = remote host and port
					#   %h = remote host
					#   %p = process ID
					#   %t = timestamp without milliseconds
					#   %m = timestamp with milliseconds
					#   %n = timestamp with milliseconds (as a Unix epoch)
					#   %i = command tag
					#   %e = SQL state
					#   %c = session ID
					#   %l = session line number
					#   %s = session start timestamp
					#   %v = virtual transaction ID
					#   %x = transaction ID (0 if none)
					#   %q = stop here in non-session
					#        processes
					#   %% = '%'
					# e.g. '<%u%%%d> '
{% endif %}
log_lock_waits = {{ psql_log_lock_waits }}			# log lock waits >= deadlock_timeout
log_statement = '{{ psql_log_statement }}'			# none, ddl, mod, all
{% if includedocs is defined %}
#log_replication_commands = off
{% endif %}
log_temp_files = {{ psql_log_temp_files }}			# log temporary files equal or larger
{% if includedocs is defined %}
					# than the specified size in kilobytes;
					# -1 disables, 0 logs all temp files
{% endif %}
log_timezone = '{{ psql_log_timezone }}'
{% if includedocs is defined %}


# - Process Title -

{% endif %}
cluster_name = '{{ psql_cluster_name }}'			# added to process titles if nonempty
{% if includedocs is defined %}
					# (change requires restart)
#update_process_title = on


#------------------------------------------------------------------------------
# RUNTIME STATISTICS
#------------------------------------------------------------------------------

# - Query/Index Statistics Collector -

{% endif %}
track_activities = {{ psql_track_activities }}
track_counts = {{ psql_track_counts }}
track_io_timing = {{ psql_track_io_timing }}
{% if includedocs is defined %}
#track_functions = none			# none, pl, all
{% endif %}
track_activity_query_size = {{ psql_track_activity_query_size }}	# (change requires restart)
{% if includedocs is defined %}
#stats_temp_directory = 'pg_stat_tmp'


# - Statistics Monitoring -

{% endif %}
log_parser_stats = {{ psql_log_parser_stats }}
log_planner_stats = {{ psql_log_planner_stats }}
log_executor_stats = {{ psql_log_executor_stats }}
{% if includedocs is defined %}
#log_statement_stats = off


#------------------------------------------------------------------------------
# AUTOVACUUM PARAMETERS
#------------------------------------------------------------------------------

#autovacuum = on			# Enable autovacuum subprocess?  'on'
					# requires track_counts to also be on.
{% endif %}
log_autovacuum_min_duration = {{ psql_log_autovacuum_min_duration }}	# -1 disables, 0 logs all actions and
{% if includedocs is defined %}
					# their durations, > 0 logs only
					# actions running at least this number
					# of milliseconds.
{% endif %}
autovacuum_max_workers = {{ psql_autovacuum_max_workers }}		# max number of autovacuum subprocesses
{% if includedocs is defined %}
					# (change requires restart)
#autovacuum_naptime = 1min		# time between autovacuum runs
{% endif %}
autovacuum_vacuum_threshold = {{ psql_autovacuum_vacuum_threshold }}	# min number of row updates before
{% if includedocs is defined %}
					# vacuum
{% endif %}
autovacuum_analyze_threshold = {{ psql_autovacuum_analyze_threshold }}	# min number of row updates before
{% if includedocs is defined %}
					# analyze
{% endif %}
autovacuum_vacuum_scale_factor = {{ psql_autovacuum_vacuum_scale_factor }}	# fraction of table size before vacuum
autovacuum_analyze_scale_factor = {{ psql_autovacuum_analyze_scale_factor }}	# fraction of table size before analyze
{% if includedocs is defined %}
#autovacuum_freeze_max_age = 200000000	# maximum XID age before forced vacuum
					# (change requires restart)
#autovacuum_multixact_freeze_max_age = 400000000	# maximum multixact age
					# before forced vacuum
					# (change requires restart)
#autovacuum_vacuum_cost_delay = 20ms	# default vacuum cost delay for
					# autovacuum, in milliseconds;
					# -1 means use vacuum_cost_delay
#autovacuum_vacuum_cost_limit = -1	# default vacuum cost limit for
					# autovacuum, -1 means use
					# vacuum_cost_limit


#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------

# - Statement Behavior -

#search_path = '"$user", public'	# schema names
#default_tablespace = ''		# a tablespace name, '' uses the default
#temp_tablespaces = ''			# a list of tablespace names, '' uses
					# only default tablespace
#check_function_bodies = on
#default_transaction_isolation = 'read committed'
#default_transaction_read_only = off
#default_transaction_deferrable = off
#session_replication_role = 'origin'
#statement_timeout = 0			# in milliseconds, 0 is disabled
#lock_timeout = 0			# in milliseconds, 0 is disabled
#idle_in_transaction_session_timeout = 0	# in milliseconds, 0 is disabled
#vacuum_freeze_min_age = 50000000
#vacuum_freeze_table_age = 150000000
#vacuum_multixact_freeze_min_age = 5000000
#vacuum_multixact_freeze_table_age = 150000000
#bytea_output = 'hex'			# hex, escape
#xmlbinary = 'base64'
#xmloption = 'content'
#gin_fuzzy_search_limit = 0
#gin_pending_list_limit = 4MB

# - Locale and Formatting -

{% endif %}
datestyle = '{{ psql_datestyle }}'
{% if includedocs is defined %}
#intervalstyle = 'postgres'
{% endif %}
timezone = '{{ psql_timezone }}'
{% if includedocs is defined %}
#timezone_abbreviations = 'Default'     # Select the set of available time zone
					# abbreviations.  Currently, there are
					#   Default
					#   Australia (historical usage)
					#   India
					# You can create your own file in
					# share/timezonesets/.
#extra_float_digits = 0			# min -15, max 3
#client_encoding = sql_ascii		# actually, defaults to database
					# encoding

# These settings are initialized by initdb, but they can be changed.
{% endif %}
lc_messages = '{{ psql_lc_messages }}'			# locale for system error message
					# strings
lc_monetary = '{{ psql_lc_monetary }}'			# locale for monetary formatting
lc_numeric = '{{ psql_lc_numeric }}'			# locale for number formatting
lc_time = '{{ psql_lc_time }}'				# locale for time formatting
{% if includedocs is defined %}

# default configuration for text search
{% endif %}
default_text_search_config = '{{ psql_default_text_search_config }}'
{% if includedocs is defined %}

# - Other Defaults -

#dynamic_library_path = '$libdir'
#local_preload_libraries = ''
#session_preload_libraries = ''


#------------------------------------------------------------------------------
# LOCK MANAGEMENT
#------------------------------------------------------------------------------

#deadlock_timeout = 1s
{% endif %}
max_locks_per_transaction = {{ psql_max_locks_per_transaction }}		# min 10
{% if includedocs is defined %}
					# (change requires restart)
#max_pred_locks_per_transaction = 64	# min 10
					# (change requires restart)
#max_pred_locks_per_relation = -2	# negative values mean
					# (max_pred_locks_per_transaction
					#  / -max_pred_locks_per_relation) - 1
#max_pred_locks_per_page = 2            # min 0


#------------------------------------------------------------------------------
# VERSION/PLATFORM COMPATIBILITY
#------------------------------------------------------------------------------

# - Previous PostgreSQL Versions -

#array_nulls = on
#backslash_quote = safe_encoding	# on, off, or safe_encoding
#default_with_oids = off
#escape_string_warning = on
#lo_compat_privileges = off
#operator_precedence_warning = off
#quote_all_identifiers = off
{% endif %}
{% if psql_standard_conforming_strings is defined %}
standard_conforming_strings = {{ psql_standard_conforming_strings }}
{% endif %}
{% if includedocs is defined %}
#synchronize_seqscans = on

# - Other Platforms and Clients -

#transform_null_equals = off


#------------------------------------------------------------------------------
# ERROR HANDLING
#------------------------------------------------------------------------------

#exit_on_error = off			# terminate session on any error?
#restart_after_crash = on		# reinitialize after backend crash?


#------------------------------------------------------------------------------
# CONFIG FILE INCLUDES
#------------------------------------------------------------------------------

# These options allow settings to be loaded from files other than the
# default postgresql.conf.

#include_dir = 'conf.d'			# include files ending in '.conf' from
					# directory 'conf.d'
#include_if_exists = 'exists.conf'	# include file only if it exists
#include = 'special.conf'		# include file


#------------------------------------------------------------------------------
# CUSTOMIZED OPTIONS
#------------------------------------------------------------------------------

# Add settings for extensions here
{% endif %}
